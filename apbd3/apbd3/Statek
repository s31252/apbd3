public class Statek
{
    public string Nazwa { get; private set; }
    public double MaxWaga { get; private set; }
    private List<Kontener> kontenery = new();

    public Statek(string nazwa, double maxWaga)
    {
        Nazwa = nazwa;
        MaxWaga = maxWaga;
    }

    public void ZaladujKontener(Kontener kontener)
    {
        double sumaWag = kontenery.Sum(k => k.Masa);
        if (sumaWag + kontener.Masa > MaxWaga)
        {
            throw new Exception("Przekroczono maksymalną wagę statku");
        }
        kontenery.Add(kontener);
    }

    public void ZaladujKontenery(List<Kontener> listaKontenerow)
    {
        foreach (var kontener in listaKontenerow)
        {
            ZaladujKontener(kontener);
        }
    }

    public void UsunKontener(string numer)
    {
        var kontener = kontenery.FirstOrDefault(k => k.GetName() == numer);
        if (kontener != null)
        {
            kontenery.Remove(kontener);
        }
    }

    public void RozladujKontener(string numer)
    {
        var kontener = kontenery.FirstOrDefault(k => k.GetName() == numer);
        kontener?.OproznienieLadunku();
    }

    public void ZastapKontener(string numer, Kontener nowyKontener)
    {
        int index = kontenery.FindIndex(k => k.GetName() == numer);
        if (index >= 0)
        {
            kontenery[index] = nowyKontener;
        }
    }

    public Kontener PrzeniesKontener(string numer)
    {
        var kontener = kontenery.FirstOrDefault(k => k.GetName() == numer);
        if (kontener != null)
        {
            kontenery.Remove(kontener);
        }
        return kontener;
    }

    public void WypiszInformacje()
    {
        Console.WriteLine($"Statek: {Nazwa}, Maksymalna waga: {MaxWaga}, Liczba kontenerów: {kontenery.Count}");
        foreach (var kontener in kontenery)
        {
            Console.WriteLine($" - {kontener.GetName()} | Masa: {kontener.Masa} / {kontener.MaxLadow}");
        }
    }

    public Kontener ZnajdzKontener(string numer)
    {
        return kontenery.FirstOrDefault(k => k.GetName() == numer);
    }
}
